<?xml version="1.0" encoding="UTF-8"?> <!-- xml파일이라는 선언 -->

<!-- Mapper 설정 파일임을 선언 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.scent.perfume.event.model.mapper.EventMapper">

<!-- 모든 회원 조회 값을 넣어주는 방법 2)-->
	<resultMap id="memberResultMap" type="Member">	<!-- type 속성 mybatis-config.xml의 <typeAliases>를 통해 간소화 -->
	<!-- resultMap태그의 id : resultMap을 식별하기 위한 값. type : 결과값을 담을 자바인스턴스의 클래스 타입 -->
		<!-- property 필드명 column 컬럼명 -->
		<!-- id : 조회 결과의 기본 키 컬럼을 매핑한다. -->
		<id property="no" column="M_NO"/>
		<!-- result : 조회 결과의 일반 컬럼을 매핑한다. -->
		<result property="division" column="M_DIVISION"/>
		<result property="status" column="M_STATUS"/>
		<result property="path" column="M_PATH"/>
		<result property="id" column="M_ID"/>
		<result property="pwd" column="M_PWD"/>
		<result property="name" column="M_NAME"/>
		<result property="birth" column="M_BIRTH"/>
		<result property="gender" column="M_GENDER"/>
		<result property="mail" column="M_MAIL"/>
		<result property="phone" column="M_PHONE"/>
		<result property="addr" column="M_ADDR"/>
		<result property="point" column="M_POINT"/>
		<result property="create" column="M_CREATE"/>
		<result property="update" column="M_UPDATE"/>
		<result property="mailStatus" column="M_MAILSTATUS"/>
	</resultMap>
	
	<resultMap id="boardResultMap" type="Board">	<!-- type 속성 mybatis-config.xml의 <typeAliases>를 통해 간소화 -->
	<!-- resultMap태그의 id : resultMap을 식별하기 위한 값. type : 결과값을 담을 자바인스턴스의 클래스 타입 -->
		<!-- property 필드명 column 컬럼명 -->
		<!-- id : 조회 결과의 기본 키 컬럼을 매핑한다. -->
		<id property="bNo" column="B_NO"/>
		<!-- result : 조회 결과의 일반 컬럼을 매핑한다. -->
		<result property="mNo" column="M_NO"/>
		<result property="bcType" column="BC_TYPE"/>
		<result property="bTitle" column="B_TITLE"/>
		<result property="bContent" column="B_CONTENT"/>
		<result property="bCreateDate" column="B_CREATEDATE"/>
		<result property="bUpdateDate" column="B_UPDATEDATE"/>
		<result property="bCount" column="B_COUNT"/>
		<result property="bStatus" column="B_STATUS"/>
		<result property="bSort" column="B_SORT"/>
		<result property="bPwd" column="B_PWD"/>
	</resultMap>


<!-- 회원가입 Member insert -->
	<insert id="insertMember" parameterType="Member"
			useGeneratedKeys="true" keyColumn="M_NO" keyProperty="no">
		INSERT INTO MEMBER (
		    M_NO, M_DIVISION, M_STATUS, M_PATH, M_ID, M_PWD, M_NAME, M_BIRTH, M_GENDER, M_MAIL, M_PHONE, M_ADDR, M_POINT, M_CREATE, M_UPDATE, M_MAILSTATUS
		) VALUES (
		    SEQ_MEMBER_M_NO.NEXTVAL, DEFAULT, DEFAULT, DEFAULT, #{id}, #{pwd}, #{name}, #{birth}, #{gender}, #{mail}, #{phone}, #{addr}, DEFAULT, DEFAULT, DEFAULT, 'N'
		)
	</insert>
	
<!-- 회원가입 아이디 중복 검사 -->
	<select id="selectMemberById" parameterType="string" resultMap="memberResultMap">
		SELECT 
			M_NO, M_DIVISION, M_STATUS, M_PATH, M_ID, M_PWD, M_NAME, M_BIRTH, M_GENDER, M_MAIL, M_PHONE, M_ADDR, M_POINT, M_CREATE, M_UPDATE, M_MAILSTATUS
		FROM MEMBER
		WHERE M_ID = #{id} AND M_STATUS = 'Y'
	</select>
	
<!-- 회원가입 ID로 M_No 찾기 -->
	<select id="selectMnoById" parameterType="string" resultType="_int">
		SELECT M_NO
		FROM MEMBER
		WHERE M_ID = #{id}
	</select>
	
<!-- 회원가입 Terms insert -->
	<insert id="insertTerms" parameterType="Terms"
			useGeneratedKeys="true" keyColumn="T_NO" keyProperty="tNo">
		INSERT INTO TERMS (
		    T_NO, M_NO, T_CHECK
		) VALUES (
		    SEQ_TERMS_T_NO.NEXTVAL, #{mNo}, #{tCheck}
		)	
	</insert>
	
<!-- 회원가입 이메일 인증
	id를 통해 M_MAILSTATUS 컬럼 난수로 변경 -->
	<update id="getKey" parameterType="map">
		UPDATE MEMBER SET M_MAILSTATUS = #{key} WHERE M_ID = #{id}
	</update>
	<!-- M_MAILSTATUS Y로 변경 -->
	<update id="updateMMailStatus" parameterType="map">
		UPDATE MEMBER SET M_MAILSTATUS = 'Y' WHERE M_ID = #{id} AND M_MAILSTATUS = #{key}
	</update>
	
<!-- 회원가입 쿠폰 발급 -->
	<!-- BENEFIT 테이블 insert -->
	<insert id="insertBenefit" parameterType="Benefit"
			useGeneratedKeys="true" keyColumn="BN_NO" keyProperty="benefitNo">
		INSERT INTO BENEFIT (
		    BN_NO, BN_NAME, BN_TITLE, BN_CONTENT, BN_CREATEDATE, BN_ENDDATE, BN_RATIO, BN_STATUS, BN_HIT
		) VALUES (
		    SEQ_BENEFIT_BN_NO.NEXTVAL, '쿠폰', '회원가입쿠폰', '회원가입시 5% 할인 쿠폰 증정', DEFAULT, SYSDATE + 30, 5, 'Y', DEFAULT
		)
	</insert>
	<!-- MEMBER_BENEFIT_INFO에 insert -->
	<insert id="insertMemberBenefitInfo" parameterType="_int" >
		INSERT INTO MEMBER_BENEFIT_INFO (
		    MBI_NO, M_NO, BN_NO, MBI_STATUS
		) VALUES (
		    SEQ_MEMBER_BENEFIT_INFO_MBI_NO.NEXTVAL, #{mNo}, #{bnNo}, DEFAULT
		)
	</insert>
	
	
<!-- ////////////////////////////////////////////////////////////	게시판	///////////////////////////////////////////////////// -->


	<!-- 게시판 목록 조회 -->
	<select id="selectEventBoardCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD WHERE B_STATUS = 'Y' AND BC_TYPE = '이벤트'
	</select>
	<select id="selectAll" resultMap="boardResultMap">
		SELECT B.B_NO, M.M_NO, B.BC_TYPE, B.B_TITLE, B.B_CONTENT, B.B_CREATEDATE, B.B_UPDATEDATE, B.B_COUNT, B.B_STATUS, B.B_SORT
		FROM BOARD B JOIN MEMBER M ON (B.M_NO = M.M_NO)
		WHERE B.B_STATUS = 'Y' AND B.BC_TYPE = '이벤트'
		ORDER BY B.B_NO DESC
	</select>
	
	<!-- 게시물 검색 기능 -->
	<select id="selectEventCountByKeyword" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD B JOIN MEMBER M ON (B.M_NO = M.M_NO)
		WHERE B.B_STATUS = 'Y' AND B.BC_TYPE = '이벤트'
		<if test="keyword != null">
			<if test='type.equals("1")'>
				AND B.B_TITLE LIKE '%' || #{keyword} || '%'
			</if>
			<if test='type.equals("2")'>
				AND B.B_CONTENT LIKE '%' || #{keyword} || '%'
			</if>
			<if test='type.equals("3")'>
				AND ((B.B_TITLE LIKE '%' || #{keyword} || '%' ) OR (B.B_CONTENT LIKE '%' || #{keyword} || '%'))
			</if>
		</if>
		ORDER BY B.B_NO DESC
	</select>
	<select id="selectAllByKeyword" resultMap="boardResultMap">
		SELECT B.B_NO, M.M_NO, B.BC_TYPE, B.B_TITLE, B.B_CONTENT, B.B_CREATEDATE, B.B_UPDATEDATE, B.B_COUNT, B.B_STATUS, B.B_SORT, B.B_PWD
		FROM BOARD B JOIN MEMBER M ON (B.M_NO = M.M_NO)
		WHERE B.B_STATUS = 'Y' AND B.BC_TYPE = '이벤트'
		<if test="keyword != null">
			<if test='type.equals("1")'>
				AND B.B_TITLE LIKE '%' || #{keyword} || '%'
			</if>
			<if test='type.equals("2")'>
				AND B.B_CONTENT LIKE '%' || #{keyword} || '%'
			</if>
			<if test='type.equals("3")'>
				AND ((B.B_TITLE LIKE '%' || #{keyword} || '%' ) OR (B.B_CONTENT LIKE '%' || #{keyword} || '%'))
			</if>
		</if>
		ORDER BY B.B_NO DESC
	</select>
	
	<!-- 게시물 상세 보기 기능 -->
	<select id="selectEventViewByNo" parameterType="_int" resultMap="boardResultMap">
		SELECT B.B_NO, M.M_NO, B.BC_TYPE, B.B_TITLE, B.B_CONTENT, B.B_CREATEDATE, B.B_UPDATEDATE, B.B_COUNT, B.B_STATUS, B.B_SORT, B.B_PWD
		FROM BOARD B JOIN MEMBER M ON (B.M_NO = M.M_NO)
		WHERE B.B_STATUS = 'Y' AND B.BC_TYPE = '이벤트' AND B.B_NO = #{no}
	</select>
	
	<!-- 게시물 등록 -->
	<insert id="insertEventBoard" parameterType="Board"
		useGeneratedKeys="true" keyColumn="B_NO" keyProperty="bNo">
		INSERT INTO BOARD (
		    B_NO, M_NO, BC_TYPE, B_TITLE, B_CONTENT, B_CREATEDATE, B_UPDATEDATE, B_COUNT, B_STATUS, B_SORT, B_PWD
		) VALUES (
		    SEQ_BOARD_B_NO.NEXTVAL, #{mNo}, '이벤트', #{bTitle}, #{bContent}, SYSDATE, SYSDATE, DEFAULT, DEFAULT, NULL, NULL
		)
	</insert>
	
	<!-- 게시물 보기 -->
	<select id="selectEventStartByTitle" parameterType="Board" resultType="date">		
		SELECT BN_CREATEDATE
		FROM BENEFIT
		INNER JOIN BOARD ON(BN_TITLE = B_TITLE)
		WHERE BN_TITLE = #{bTitle};
	</select>
	<select id="selectEventEndByTitle" parameterType="Board" resultType="date">
		SELECT BN_ENDDATE
		FROM BENEFIT
		INNER JOIN BOARD ON(BN_TITLE = B_TITLE)
		WHERE BN_TITLE = #{bTitle};
	</select>
	
	<!-- 게시물 수정 -->
	<update id="updateEventBoard" parameterType="Board">
		UPDATE BOARD
		<trim prefix="SET" suffixOverrides=",">
			<if test="bTitle != null">
				B_TITLE = #{bTitle},
			</if>
			<if test="bContent != null">
				B_CONTENT = #{bContent},
			</if>			
		</trim>
		WHERE B_NO = #{bNo}
	</update>
	
	<!-- 게시물 삭제 -->
	<update id="updateEventBoardStatus" parameterType="map">
		UPDATE BOARD SET B_STATUS = #{bStatus} WHERE B_NO = #{no}
	</update>
	
	
	
</mapper>